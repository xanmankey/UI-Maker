- Finish implementing the sortWidgets() method (and figure out where to call it)
- Keep implementing context menu (and adapt other widgets as well)
- Implement main.dart

- TEST (write tests and try it with DWTP)
- Figure out how to publish a package and use it for my CS project (https://docs.flutter.dev/development/packages-and-plugins/developing-packages)

MY MAIN GOAL:
Create a system where a widget can be dragged in, custom properties can be defined,
and you can sort by those properties to either order or filter widgets
ALL WITHOUT allowing the user to change the database structure and maintaining layout for next time

- How in the world would I handle sorting by custom properties?
- That's one of the reasons the SortTypes enum exists

SUBGOALS:
Make it as easy to develop new 'Creator' widgets as possible
Satisfy pub dev points requirements

CURRENT TODOS
- creator_area (using draggable) 
- custom_dialog
- generate_widgets
- creator_bar

POSSIBLE REFACTORING
- CreatorBase

Once I've done these, I have to look into testing the package
- First, try a dry-run for publishing to make sure it's ready in that regard (dart pub publish --dry-run)
! You can publish a package as a prerelease: https://dart.dev/tools/pub/publishing#publishing-prereleases
! Once a package is published, it will ALWAYS remain so (don't publish until you're confident). 
You can mark a package as discontinued though.

- I'll probably just make a test example main.dart file for using the creator widget; 
e.g. the provider package HAS no main.dart but it DOES have one under the examples folder

DOCUMENT THOROUGHLY before publishing